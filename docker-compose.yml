version: "3"

services:
  web:
    image: nginx:alpine
    restart: unless-stopped
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    links:
      - wp
    volumes_from:
      - wp
    ports:
      - "80"
    environment:
      VIRTUAL_HOST: developer.com.br
      VIRTUAL_PORT: 80

  wp:
    #image: wordpress:latest # https://hub.docker.com/_/wordpress/
    image: wordpress:php8.1-fpm-alpine
    ports:
      - "80" # change ip if required
    volumes:
      - ./config/php.conf.uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
      - ./wp-app:/var/www/html/wp-content:rw # Full wordpress project
      #- ./plugin-name/trunk/:/var/www/html/wp-content/plugins/plugin-name # Plugin development
      #- ./theme-name/trunk/:/var/www/html/wp-content/themes/theme-name # Theme development
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: password
      WORDPRESS_DEBUG: "true"
    links:
      - db
    depends_on:
      - db

  wpcli:
    image: wordpress:cli
    user: xfs
    volumes:
      - ./wp-app:/var/www/html
    depends_on:
      - db
      - wp

  db:
    image: mysql:latest # https://hub.docker.com/_/mysql/ - or mariadb https://hub.docker.com/_/mariadb
    ports:
      - 127.0.0.1:3307:3306 # change ip if required
    command:
      [
        "--default_authentication_plugin=mysql_native_password",
        "--character-set-server=utf8mb4",
        "--collation-server=utf8mb4_unicode_ci",
      ]
    volumes:
      - ./wp-data:/docker-entrypoint-initdb.d
      - db_data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_ROOT_PASSWORD: password

volumes:
  db_data:

networks:
  default:
    external:
      name: nginx-proxy
